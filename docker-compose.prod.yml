# 🚀 프로덕션용 Docker Compose 설정
# docker-compose -f docker-compose.yml -f docker-compose.prod.yml up 으로 실행

version: '3.8'

services:
  # PostgreSQL 프로덕션 설정
  postgres:
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db:/docker-entrypoint-initdb.d
    # 프로덕션에서는 포트 노출 안함
    ports: []

  # Redis 프로덕션 설정
  redis:
    restart: always
    # 프로덕션에서는 포트 노출 안함
    ports: []
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}

  # Kafka 프로덕션 설정
  zookeeper:
    restart: always

  kafka:
    restart: always
    # 프로덕션에서는 포트 노출 안함
    ports: []

  # 백엔드 프로덕션 설정
  backend:
    restart: always
    environment:
      APP_ENV: production
      DEBUG: false
      PYTHONUNBUFFERED: 1
      # 데이터베이스 설정
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      # Redis 설정
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      # Kafka 설정
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      # JWT 설정
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ALGORITHM: HS256
      JWT_EXPIRE_MINUTES: 30
      # 사이버 토큰 설정
      INITIAL_CYBER_TOKENS: 200
      # 본사 사이트 연동 설정
      CORPORATE_SITE_URL: ${CORPORATE_SITE_URL}
      CORPORATE_API_KEY: ${CORPORATE_API_KEY}
    # 프로덕션에서는 소스 마운트 안함
    volumes:
      - backend_logs:/app/logs
    # 프로덕션에서는 포트 노출 안함 (nginx가 프록시)
    ports: []

  # 프론트엔드 프로덕션 설정
  frontend:
    restart: always
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL}
    # 프로덕션에서는 소스 마운트 안함
    volumes: []
    # 프로덕션에서는 포트 노출 안함 (nginx가 프록시)
    ports: []

  # Celery Worker 프로덕션 설정
  celery-worker:
    restart: always
    environment:
      APP_ENV: production
      DEBUG: false
    volumes:
      - backend_logs:/app/logs

  # Celery Beat 프로덕션 설정
  celery-beat:
    restart: always
    environment:
      APP_ENV: production
      DEBUG: false
    volumes:
      - backend_logs:/app/logs

  # Nginx 리버스 프록시 (프로덕션 전용)
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  backend_logs:

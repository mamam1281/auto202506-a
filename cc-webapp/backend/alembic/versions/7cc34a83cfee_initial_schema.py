"""initial_schema

Revision ID: 7cc34a83cfee
Revises: 
Create Date: 2025-06-05 18:38:15.011753

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7cc34a83cfee'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adult_content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stage', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=255), nullable=True),
    sa.Column('media_url', sa.String(length=255), nullable=True),
    sa.Column('required_segment_level', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_adult_content_id'), 'adult_content', ['id'], unique=False)
    op.create_index(op.f('ix_adult_content_stage'), 'adult_content', ['stage'], unique=True)
    op.create_table('invite_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=6), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invite_codes_code'), 'invite_codes', ['code'], unique=True)
    op.create_index(op.f('ix_invite_codes_id'), 'invite_codes', ['id'], unique=False)
    op.create_index(op.f('ix_invite_codes_is_used'), 'invite_codes', ['is_used'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('nickname', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('invite_code', sa.String(length=6), nullable=True),
    sa.Column('cyber_token_balance', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('segment_label', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nickname')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('age_verification_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('verification_method', sa.String(length=50), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('verification_data', sa.JSON(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_age_verification_records_id'), 'age_verification_records', ['id'], unique=False)
    op.create_table('flash_offers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('original_price', sa.Integer(), nullable=False),
    sa.Column('discounted_price', sa.Integer(), nullable=False),
    sa.Column('discount_rate', sa.Float(), nullable=False),
    sa.Column('trigger_reason', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_purchased', sa.Boolean(), nullable=True),
    sa.Column('purchased_at', sa.DateTime(), nullable=True),
    sa.Column('target_stage_name', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['adult_content.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flash_offers_id'), 'flash_offers', ['id'], unique=False)
    op.create_table('game_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('game_type', sa.String(length=50), nullable=False),
    sa.Column('result', sa.String(length=50), nullable=False),
    sa.Column('tokens_spent', sa.Integer(), nullable=True),
    sa.Column('reward_given', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_game_logs_created_at'), 'game_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_game_logs_id'), 'game_logs', ['id'], unique=False)
    op.create_index(op.f('ix_game_logs_user_id'), 'game_logs', ['user_id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=500), nullable=False),
    sa.Column('is_sent', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_created_at'), 'notifications', ['created_at'], unique=False)
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_index(op.f('ix_notifications_is_sent'), 'notifications', ['is_sent'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_table('site_visits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('visit_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_site_visits_id'), 'site_visits', ['id'], unique=False)
    op.create_index(op.f('ix_site_visits_user_id'), 'site_visits', ['user_id'], unique=False)
    op.create_table('token_transfers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_user_id', sa.Integer(), nullable=True),
    sa.Column('to_user_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_token_transfers_created_at'), 'token_transfers', ['created_at'], unique=False)
    op.create_index(op.f('ix_token_transfers_id'), 'token_transfers', ['id'], unique=False)
    op.create_table('user_actions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_actions_action_type'), 'user_actions', ['action_type'], unique=False)
    op.create_index(op.f('ix_user_actions_id'), 'user_actions', ['id'], unique=False)
    op.create_index(op.f('ix_user_actions_timestamp'), 'user_actions', ['timestamp'], unique=False)
    op.create_index(op.f('ix_user_actions_user_id'), 'user_actions', ['user_id'], unique=False)
    op.create_table('user_segments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('rfm_group', sa.String(), nullable=True),
    sa.Column('risk_profile', sa.String(), nullable=True),
    sa.Column('streak_count', sa.Integer(), nullable=True),
    sa.Column('recency_score', sa.Integer(), nullable=True),
    sa.Column('frequency_score', sa.Integer(), nullable=True),
    sa.Column('monetary_score', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_segments_id'), 'user_segments', ['id'], unique=False)
    op.create_index(op.f('ix_user_segments_rfm_group'), 'user_segments', ['rfm_group'], unique=False)
    op.create_index(op.f('ix_user_segments_risk_profile'), 'user_segments', ['risk_profile'], unique=False)
    op.create_index(op.f('ix_user_segments_user_id'), 'user_segments', ['user_id'], unique=True)
    op.create_table('user_streaks',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('win_streak', sa.Integer(), nullable=True),
    sa.Column('loss_streak', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('vip_access_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('access_tier', sa.String(length=20), nullable=True),
    sa.Column('tokens_spent', sa.Integer(), nullable=True),
    sa.Column('accessed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['content_id'], ['adult_content.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vip_access_logs_id'), 'vip_access_logs', ['id'], unique=False)
    op.create_table('user_rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reward_type', sa.String(length=50), nullable=False),
    sa.Column('reward_value', sa.String(length=255), nullable=False),
    sa.Column('source_description', sa.String(length=255), nullable=True),
    sa.Column('awarded_at', sa.DateTime(), nullable=True),
    sa.Column('trigger_action_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['trigger_action_id'], ['user_actions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_rewards_awarded_at'), 'user_rewards', ['awarded_at'], unique=False)
    op.create_index(op.f('ix_user_rewards_id'), 'user_rewards', ['id'], unique=False)
    op.create_index(op.f('ix_user_rewards_reward_type'), 'user_rewards', ['reward_type'], unique=False)
    op.create_index(op.f('ix_user_rewards_user_id'), 'user_rewards', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_rewards_user_id'), table_name='user_rewards')
    op.drop_index(op.f('ix_user_rewards_reward_type'), table_name='user_rewards')
    op.drop_index(op.f('ix_user_rewards_id'), table_name='user_rewards')
    op.drop_index(op.f('ix_user_rewards_awarded_at'), table_name='user_rewards')
    op.drop_table('user_rewards')
    op.drop_index(op.f('ix_vip_access_logs_id'), table_name='vip_access_logs')
    op.drop_table('vip_access_logs')
    op.drop_table('user_streaks')
    op.drop_index(op.f('ix_user_segments_user_id'), table_name='user_segments')
    op.drop_index(op.f('ix_user_segments_risk_profile'), table_name='user_segments')
    op.drop_index(op.f('ix_user_segments_rfm_group'), table_name='user_segments')
    op.drop_index(op.f('ix_user_segments_id'), table_name='user_segments')
    op.drop_table('user_segments')
    op.drop_index(op.f('ix_user_actions_user_id'), table_name='user_actions')
    op.drop_index(op.f('ix_user_actions_timestamp'), table_name='user_actions')
    op.drop_index(op.f('ix_user_actions_id'), table_name='user_actions')
    op.drop_index(op.f('ix_user_actions_action_type'), table_name='user_actions')
    op.drop_table('user_actions')
    op.drop_index(op.f('ix_token_transfers_id'), table_name='token_transfers')
    op.drop_index(op.f('ix_token_transfers_created_at'), table_name='token_transfers')
    op.drop_table('token_transfers')
    op.drop_index(op.f('ix_site_visits_user_id'), table_name='site_visits')
    op.drop_index(op.f('ix_site_visits_id'), table_name='site_visits')
    op.drop_table('site_visits')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_is_sent'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_created_at'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_game_logs_user_id'), table_name='game_logs')
    op.drop_index(op.f('ix_game_logs_id'), table_name='game_logs')
    op.drop_index(op.f('ix_game_logs_created_at'), table_name='game_logs')
    op.drop_table('game_logs')
    op.drop_index(op.f('ix_flash_offers_id'), table_name='flash_offers')
    op.drop_table('flash_offers')
    op.drop_index(op.f('ix_age_verification_records_id'), table_name='age_verification_records')
    op.drop_table('age_verification_records')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_invite_codes_is_used'), table_name='invite_codes')
    op.drop_index(op.f('ix_invite_codes_id'), table_name='invite_codes')
    op.drop_index(op.f('ix_invite_codes_code'), table_name='invite_codes')
    op.drop_table('invite_codes')
    op.drop_index(op.f('ix_adult_content_stage'), table_name='adult_content')
    op.drop_index(op.f('ix_adult_content_id'), table_name='adult_content')
    op.drop_table('adult_content')
    # ### end Alembic commands ###
